c
project_params.except(:id)
c
n
project_params.except(:id)
c
n
response
c
project_params.except(:id)
c
project_params.except(:id)
c
project_params.except(:id)
n
c
project_params.except(:id)
n
c
ccc
c
bug
c
n
 n
 Bug.new(bug_params)
c
invalid_bug_attributes
c
invalid_bug_attributes
c
invalid_bug_attributes
params
c
Bug.new(bug_params)
c
Bug.new(bug_params)
c
Bug.new(bug_params)
c
Bug.new(bug_params)
c
bug_params
c
params
Bug.new(bug_params)
c
params
Bug.new(bug_params)
c
Bug.new(bug_params)
c
Bug.new(bug_params)
c
bug_params
Bug.new(bug_params)
c
bug_params
c
assigns(:bug)
c
authorize Bug
current_user
c
user.role
c
params
authorize Bug
c
params
c
request.c
request.controller_class
request.controller_action
request.controller_class
request.controller
request
response.action
response.headers
response.controller
response
c
response
params
c
response
c
user.signed?
user.signed_in?
user.reload
user.last_sign_in_at
user.signed_in?
user
Current.user
current_user
Current.user
c
post :create, params: { project_id: project.id, bug: bug_attributes }
response.
response
post :create, params: { project_id: project.id, bug: bug_attributes }
request
bug_attributes
project.id
c
project.users.bug.count
{project.users.bug.count
c
n
nn
n
project.users.count
c
project.user.count
c
user.bugs.count
bug_attributes
creater_id:
creater_id
c
bug_count
c
Bug.count
c
Bug.count
c
bugs_count
c
bug_attributes
bugs_attributes
bugs_count
c
bug_attributesc
bug_attributes
put params[:bug]
put :bug
:bug
c
n
bug_attributes
c
project_id:
project.id
project_id
response
c
@bug
@bug.assigned_to
bug_params
@bug.update!(bug_params)
@bug
c
bug_params
@bug
c
@bug
bug
c
@bug
c
@bug
c
nnn
n
e
current_user
:assigned_to.value
:assigned_to
assigned_to
c
:assigned_to
assigned_to
c
current_user
c
@user_project
c
@user_project
c
params[:project_id]
c
params[:project_id]
:project_id
project_id
c
project
c
Project.find(params[1])c
Project.find(params[1])
Project.find(params[:project_id])
@project
c
new_user_project_path(project.id)
c
project
